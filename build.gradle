plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

configurations {
    runtime
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'com.baomidou:mybatis-plus-boot-starter:3.1.2'
    implementation 'com.softwareloop:mybatis-generator-lombok-plugin:1.0'
    implementation 'com.alibaba:fastjson:1.2.47'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile){
    options.encoding="UTF-8"
}

jar {
    String tmp=''
    configurations.runtime.each{tmp=tmp+"lib\\"+it.name}
    manifest {
        attributes 'Main-Class': 'com.example.demo.DemoApplication'
        attributes 'Class-Path': tmp
    }
}

task copyJar(type:Copy){
    from configurations.runtime
    into ('build/libs/lib')
}

task release(type:Copy, dependsOn: [build, copyJar]) {
    from 'conf'
    into ('build/libs/eachend/conf')
}
